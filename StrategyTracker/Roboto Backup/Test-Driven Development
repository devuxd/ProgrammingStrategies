# This is a strategy for doing design by writing tests first and then making
# sure code passes the tests.
# This strategy requirements one parameter: requirements. For requirements, you can
# simply copy and paste the text of your requirements or add a short reference
# to where it is if it is long.
STRATEGY testDrivenDevelopment(requirements)
	# The first step in test-driven development is enumerating all of the user scenarios.
	# You want to ensure that you enumerate specific requirements that are focused and small and can be described in a sentence or less. You should try to find all of the user scenarios which might exist.
	# You should separate each scenario with a comma.
	SET 'scenarios' to be short descriptions of the testable user scenarios in requirements
	FOR EACH 'scenario' IN 'scenarios'
	    Create a test for scenario
	    UNTIL the test fails
	        Fix the test to ensure that it fails
	    # Make it work
	    Implement the code to make the test pass
	    Run the tests
	    UNTIL all of the tests pass
	        Edit the code to address the test failure
	        Run the tests
	    # Make it right
	    # Look to see if there any issues that make the design less than ideal.
	    SET 'designIssue' TO be an unaddressed design issue if any or nothing otherwise
	    UNTIL 'designIssue' is nothing
	        Edit the code to fix the design issue
	        Run the tests
    	    SET 'designIssue' TO be an unaddressed design issue if any or nothing otherwise
	    # Make it fast
	    # Look to see if there any performance issues that might cause it to be slow in some circumstances
	    SET 'perfIssue' TO be an unaddressed performance issue if any or nothing otherwise
	    UNTIL 'perfIssue' is nothing
	        Edit the code to fix the performance issue
	        Run the tests
    	    SET 'perfIssue' TO be an unaddressed performance issue if any or nothing otherwise
